{"code":"import colors from './colors.json';\r\nimport widgetconfig from './widgetconfig.json';\r\nvar COLORS = colors;\r\n//change theme colour to colour name/code you wish to, to see effect. PS: You can also use colors.COLOUR_NAME.name (e.g. colors.blue.name) to get colour hints\r\nvar THEME_COLOR = widgetconfig.themeColor || 'rgb(145, 0, 145)', DROPDOWN_BGCOLOR = widgetconfig.dropdownBg || 'white', GRAPH_TABLINK_COLOR = widgetconfig.graphTablinkColor || '', //recommended: yellow\r\nGRAPH_TABLINK_HOVER_BG = widgetconfig.graphTablinkHoverBg || ''; //recommended: rgb(32, 199, 245)\r\nvar cssProps = {};\r\ncssProps.themeBg = THEME_COLOR;\r\ncssProps.themeHoverBg = getColor([-25, -25, -25]).variant;\r\nvar toggleBarBg = getColor([0, 0, 0]);\r\ncssProps.toggleBarBg = toggleBarBg.rgbVal.reduce(function (a, b) { return a + b; }) < 475 ? 'white' : 'black';\r\ncssProps.dropdownBg = DROPDOWN_BGCOLOR;\r\nvar dropdownBg = getColor([0, 0, 0], cssProps.dropdownBg);\r\ncssProps.dropdownColor = dropdownBg.rgbVal.reduce(function (a, b) { return a + b; }) < 475 ? 'white' : 'black';\r\ncssProps.activeTablinkColor = toggleBarBg.rgbVal.reduce(function (a, b) { return a + b; }) > 510 ?\r\n    getColor([-48, -48, -48]).variant : toggleBarBg.variant;\r\ncssProps.graphTabLinkBg = THEME_COLOR;\r\ncssProps.graphTablinkHoverBg = GRAPH_TABLINK_HOVER_BG ||\r\n    getColor([-133, 179, 90], cssProps.themeBg).variant;\r\ncssProps.graphTablinkColor = GRAPH_TABLINK_COLOR ||\r\n    getColor([223, 56, -245], cssProps.graphTablinkHoverBg).variant;\r\ncssProps.tablinkBg = getColor([45, 80, 45]).variant;\r\ncssProps.tablinkHoverBg = getColor([20, 20, 20], cssProps.tablinkBg).variant;\r\ncssProps.tablinkColor = toggleBarBg.rgbVal.reduce(function (a, b) { return a + b; }) > 510 ?\r\n    getColor([-12, -12, -12]).variant : getColor([-12, -12, -12], cssProps.dropdownBg).variant;\r\ncssProps.tablinkHoverColor = getColor([12, 12, 12], cssProps.tablinkColor).variant;\r\ncssProps.itemHoverBg = getColor([-12, -12, -12], cssProps.dropdownBg).variant;\r\ncssProps.itemBorderBottomColor = getColor([-20, -20, -20], cssProps.dropdownBg).variant;\r\ncssProps.itemBorderBottomHoverColor = getColor([-20, -20, -20], cssProps.itemBorderBottomColor).variant;\r\ncssProps.graphWrapperBg = getColor([-13, -13, -13], cssProps.dropdownBg).variant;\r\ncssProps.graphBg = cssProps.dropdownBg;\r\ncssProps.graphBorderColor = getColor([-26, -26, -26], cssProps.dropdownBg).variant;\r\ncssProps.graphCurrentNodeBg = getColor([25, 25, 25]).variant;\r\ncssProps.graphCurrentNodeBorderColor = THEME_COLOR;\r\ncssProps.graphParentNodesBg = getColor([0, 0, 0], cssProps.graphTablinkHoverBg).variant;\r\ncssProps.graphParentNodesBorderColor = getColor([-20, -20, -20], cssProps.graphParentNodesBg).variant;\r\ncssProps.graphNetworkRequiredEdgeColor = widgetconfig.graphNetworkRequiredEdgeColor || 'darkorange';\r\ncssProps.graphNetworkRecommendedEdgeColor = widgetconfig.graphNetworkRecommendedEdgeColor || '#009100';\r\nexport default function getThemeCSSText() {\r\n    return ThemeCSSText(cssProps);\r\n}\r\nexport function getCSSProps() {\r\n    return cssProps;\r\n}\r\nexport function getColor(rgbDiff, color) {\r\n    var _a;\r\n    if (color === void 0) { color = THEME_COLOR; }\r\n    if (rgbDiff.length !== 3)\r\n        throw new Error('rgbDiff expects three values.');\r\n    var rgbVal, r, g, b, variant;\r\n    if (/^[a-zA-Z]{3,}$/i.test(color) && (color in COLORS))\r\n        rgbVal = COLORS[color].rgbVal;\r\n    else if (/^#[0-9a-f]{3,6}$/i.test(color))\r\n        rgbVal = color.replace(/#([0-9a-f]{1,2})([0-9a-f]{1,2})([0-9a-f]{1,2})/ig, '$1 $2 $3')\r\n            .split(' ').map(function (hex) { return Number(parseInt(hex.length === 2 ? hex : hex + \"f\", 16).toString(10)); });\r\n    else if (/^rgb\\(\\d{1,3},\\s*\\d{1,3},\\s*\\d{1,3}\\)$/i.test(color))\r\n        rgbVal = color.replace(/.*\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)/, '$1 $2 $3')\r\n            .split(' ').map(function (val) { return Number(val); });\r\n    else\r\n        throw new Error(\"Invalid colour code/name, '\" + color + \"'\");\r\n    _a = rgbVal.map(function (val, i) { return val + rgbDiff[i]; }), r = _a[0], g = _a[1], b = _a[2];\r\n    variant = \"rgb(\" + (r >= 0 ? (r > 255 ? 255 : r) : 0) + \", \" + (g >= 0 ? (g > 255 ? 255 : g) : 0) + \", \" + (b >= 0 ? (b > 255 ? 255 : b) : 0) + \")\";\r\n    return {\r\n        variant: String(variant),\r\n        rgbVal: rgbVal\r\n    };\r\n}\r\nfunction ThemeCSSText(cssProps) {\r\n    var cssText = \"\\n    .widget .dropdown \\n    { \\n      color: \" + cssProps.dropdownColor + \";\\n      background: \" + cssProps.dropdownBg + \";\\n      border-color: \" + cssProps.tablinkBg + \";\\n    }\\n    \\n    .widget .dropdown-toggle-bar \\n    {\\n      background: \" + cssProps.themeBg + \";\\n      color: \" + cssProps.toggleBarBg + \";\\n    }\\n    \\n    .widget .dropdown-toggle-bar:hover \\n    { background: \" + cssProps.themeHoverBg + \"; }\\n    \\n    .widget .tab-links-wrapper button \\n    {\\n      color: \" + cssProps.tablinkColor + \";\\n      background: \" + cssProps.tablinkBg + \";\\n    }\\n    \\n    .widget .tab-links-wrapper button.back-btn \\n    {\\n      background: \" + cssProps.themeBg + \";\\n      color: \" + cssProps.toggleBarBg + \" !important;\\n    }\\n    \\n    .widget .tab-links-wrapper button.back-btn:hover \\n    { background: \" + cssProps.themeHoverBg + \"; }\\n    \\n    .widget .tab-links-wrapper button.graph-tab-link \\n    {\\n      background: \" + cssProps.graphTabLinkBg + \";\\n      color: \" + cssProps.graphTablinkColor + \" !important;\\n    }\\n    \\n    .widget .tab-links-wrapper button.graph-tab-link:hover \\n    { background: \" + cssProps.graphTablinkHoverBg + \" !important; }\\n    \\n    .widget .tab-links-wrapper button[class^=active] \\n    { background: \" + cssProps.dropdownBg + \"; }\\n    \\n    .widget .tab-links-wrapper button.recommended-tab-link,\\n    .widget .tab-links-wrapper button.required-tab-link \\n    { border-color: \" + cssProps.tablinkBg + \"; }\\n    \\n    .widget .tab-links-wrapper button.recommended-tab-link:hover,\\n    .widget .tab-links-wrapper button.required-tab-link:hover {\\n      background: \" + cssProps.tablinkHoverBg + \";\\n      color: \" + cssProps.tablinkHoverColor + \" !important;\\n    }\\n    \\n    .widget .tab-links-wrapper button.recommended-tab-link.active-tab-link,\\n    .widget .tab-links-wrapper button.required-tab-link.active-tab-link\\n    {\\n      background: \" + cssProps.dropdownBg + \";\\n      color: \" + cssProps.activeTablinkColor + \" !important;\\n    }\\n    \\n    .widget .tabs-wrapper ul.tab .item-wrapper \\n    { border-bottom: 1px solid \" + cssProps.itemBorderBottomColor + \"; }\\n    \\n    .widget .tabs-wrapper ul.tab .item-wrapper:hover \\n    {\\n      background: \" + cssProps.itemHoverBg + \";\\n      border-bottom-color: \" + cssProps.itemBorderBottomHoverColor + \";\\n    }\\n    \\n    .widget .tabs-wrapper ul .graph-wrapper \\n    { background: \" + cssProps.graphWrapperBg + \"; }\\n\\n    .widget .tabs-wrapper ul .graph-wrapper #graph \\n    {\\n      border: 1px solid \" + cssProps.graphBorderColor + \";\\n      background: \" + cssProps.dropdownBg + \";\\n    }\\n    \\n    .widget .tabs-wrapper ul .graph-wrapper #graph-key .key-current \\n    { background: \" + cssProps.graphCurrentNodeBg + \"; }\\n    \\n    .widget .tabs-wrapper ul .graph-wrapper #graph-key .key-other \\n    { background: \" + cssProps.graphParentNodesBg + \"; }\\n\\n    .widget .tabs-wrapper ul .graph-wrapper #graph-key .key-line-recommended {\\n      background: \" + cssProps.graphNetworkRecommendedEdgeColor + \";\\n    }\\n\\n    .widget .tabs-wrapper ul .graph-wrapper #graph-key .key-line-required {\\n      background: \" + cssProps.graphNetworkRequiredEdgeColor + \";\\n    }\\n    \\n    .useCustomScrollBar::-webkit-scrollbar-track \\n    { background: \" + cssProps.tablinkBg + \"; }\\n    \\n    .useCustomScrollBar::-webkit-scrollbar-thumb \\n    { background: \" + cssProps.themeHoverBg + \"; }\\n  \";\r\n    return cssText;\r\n}\r\n","references":["C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/colors.json","C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/widgetconfig.json"]}
