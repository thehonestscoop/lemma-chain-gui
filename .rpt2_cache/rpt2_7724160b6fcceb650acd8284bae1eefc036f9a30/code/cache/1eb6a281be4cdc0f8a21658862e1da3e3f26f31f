{"code":"import React from 'react';\r\n// import { Props } from './Dropdown';\r\nimport { getCSSProps } from '../ThemeCSS';\r\nimport widgetconfig from '../widgetconfig.json';\r\nimport { TabLinksContext } from '../context';\r\nvar TabLinks = React.forwardRef(function (unUsedProps, unUsedRef) {\r\n    return (<TabLinksContext.Consumer>\r\n      {function (props) { return (<div className='tab-links-wrapper' style={{ height: props.state.dropdownIsCollapsed ? 0 : 48,\r\n        maxWidth: widgetconfig.widgetMaxWidth }}>\r\n          <button className='back-btn' title='Previous Ref' onClick={props.goBackInTime} style={{ width: props.state.historyExists ? 55 : 0 }}>❮</button>\r\n          <button className={\"required-tab-link tab-link \\n              \" + (/required/.test(props.state.activeTabName) ? 'active-tab-link' : '')} title='Required references' data-tab-name='required-tab' onClick={props.handleTabToggle} ref={/required/.test(props.state.activeTabName) ? props.ref.activeTabLink : null}>Required</button>\r\n          <button className={\"recommended-tab-link tab-link \\n              \" + (/recommended/.test(props.state.activeTabName) ? 'active-tab-link' : '')} title='Recommended references' data-tab-name='recommended-tab' onClick={props.handleTabToggle} ref={/recommended/.test(props.state.activeTabName) ? props.ref.activeTabLink : null}>Recommended</button>\r\n          <button className={\"graph-tab-link tab-link\\n              \" + (/graph/.test(props.state.activeTabName) ? 'active-tab-link' : '')} title='View graph' data-tab-name='graph-tab' style={{ background: /graph/.test(props.state.activeTabName) ? getCSSProps().graphTablinkHoverBg : '' }} onClick={props.handleTabToggle} ref={/graph/.test(props.state.activeTabName) ? props.ref.activeTabLink : null}>★</button>\r\n        </div>); }}\r\n    </TabLinksContext.Consumer>);\r\n});\r\nexport default TabLinks;\r\n// {\r\n//   \"compilerOptions\": {\r\n//     \"target\": \"es5\",\r\n//     \"lib\": [\r\n//       \"dom\",\r\n//       \"dom.iterable\",\r\n//       \"esnext\"\r\n//     ],\r\n//     \"allowJs\": true,\r\n//     \"skipLibCheck\": true,\r\n//     \"esModuleInterop\": true,\r\n//     \"allowSyntheticDefaultImports\": true,\r\n//     \"strict\": true,\r\n//     \"forceConsistentCasingInFileNames\": true,\r\n//     \"module\": \"esnext\",\r\n//     \"moduleResolution\": \"node\",\r\n//     \"resolveJsonModule\": true,\r\n//     \"isolatedModules\": true,\r\n//     \"noEmit\": true,\r\n//     \"jsx\": \"preserve\",\r\n//     \"noImplicitAny\": true,\r\n//     \"outDir\": \"dist\"\r\n//   },\r\n//   \"include\": [\r\n//     \"src/**/*\"\r\n//   ],\r\n//   \"exclude\": [\r\n//     \"node_modules\"\r\n//   ]\r\n// }\r\n","references":["C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/node_modules/@types/react/index.d.ts","C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/ThemeCSS.tsx","C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/widgetconfig.json","C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/context.tsx"]}
