{"code":"import React from 'react';\r\nimport { LoaderContext } from '../context';\r\n// interface Props\r\n// {\r\n//   refIsLoading?: boolean;\r\n//   attributes?: \r\n//   {\r\n//     size: number;\r\n//     type: string;\r\n//     color?: string;\r\n//     rider?: string;\r\n//     wrapperHeight?: number;\r\n//   };\r\n// }\r\n//Loader returns 'minor loader' (without wrapper) or 'major loader' (with wrapper) depending on context \r\nexport default function Loader() {\r\n    return (<LoaderContext.Consumer>\r\n      {function (_a) {\r\n        var refIsLoading = _a.refIsLoading, attributes = _a.attributes;\r\n        var circlesStyle = {\r\n            height: attributes.size,\r\n            width: attributes.size,\r\n            background: attributes.color || '#333',\r\n            display: 'inline-block',\r\n            borderRadius: '50%',\r\n            boxShadow: '0.5px 0.5px 1px rgba(0, 0, 0, 0.2)',\r\n            marginRight: 5,\r\n        }, loaderWrapperStyle = {\r\n            visibility: refIsLoading ? 'visible' : 'hidden',\r\n            opacity: refIsLoading ? 1 : 0,\r\n            position: 'absolute',\r\n            width: '100%',\r\n            background: 'rgba(50, 50, 50, 0)',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            bottom: 0,\r\n            height: attributes.wrapperHeight,\r\n            flexDirection: 'column',\r\n            color: attributes.color,\r\n            textShadow: '0.5px 0.5px 1px rgba(0, 0, 0, 0.2)'\r\n        }, loaderStyle = {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            position: attributes.type === 'minor' ? 'absolute' : 'static',\r\n            visibility: refIsLoading ? 'visible' : 'hidden',\r\n            opacity: refIsLoading ? 1 : 0\r\n        };\r\n        var minorLoader = <span className='loader' style={loaderStyle}>\r\n                  <span className='loader-circle' style={circlesStyle}></span>\r\n                  <span className='loader-circle' style={circlesStyle}></span>\r\n                  <span className='loader-circle' style={circlesStyle}></span>\r\n                </span>, majorLoader = <div className='loader-wrapper' style={loaderWrapperStyle}>\r\n                  {minorLoader}\r\n                  <span className='loader-rider' style={{ fontSize: 13, marginTop: 10 }}>{attributes.rider}</span>\r\n                </div>;\r\n        //loader animation style in CSS (index.css) file\r\n        return attributes.type === 'minor' ? minorLoader : majorLoader;\r\n    }}\r\n    </LoaderContext.Consumer>);\r\n}\r\n","references":["C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/node_modules/@types/react/index.d.ts","C:/Users/Power'f-GOD/rocketlaunchr/lemma-chain-react/react-app/src/context.tsx"]}
